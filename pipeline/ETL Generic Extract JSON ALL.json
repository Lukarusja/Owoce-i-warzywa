{
	"name": "ETL Generic Extract JSON ALL",
	"properties": {
		"activities": [
			{
				"name": "Dummy Action",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Lookup JSON",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "Dummy Fail (this is supposed to fail)",
					"errorCode": "555"
				}
			},
			{
				"name": "Lookup JSON",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureFileStorageReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@concat('Import/',pipeline().parameters.DataWarehouseName,'/InProcess/')",
								"type": "Expression"
							},
							"wildcardFileName": {
								"value": "@concat(pipeline().parameters.FilenamePattern, '*.json')",
								"type": "Expression"
							},
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "SourceFileJSON",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Convert JSON_Properties String to Array",
				"description": "Contains an array of properties in JSON returned by the previous step",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Clean Up JSON Properties String",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "JSON_Properties",
					"value": {
						"value": "@split(variables('Helper_String'), '^')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Until",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Set Column Mapping String",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(variables('Current_Property'),variables('Number_of_JSON_Properties'))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Append Column Mapping String",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set Column Mapping String Helper",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "Column_Mapping_String",
								"value": {
									"value": "@variables('Column Mapping String Helper')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Column Mapping String Helper",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "Column Mapping String Helper",
								"value": {
									"value": "@concat(variables('Column_Mapping_String'),'{\"source\": {\"name\": \"', variables('JSON_Properties')[variables('Current_Property')], '\"},\"target\":{\"name\":\"', variables('JSON_Properties')[variables('Current_Property')], '\"}},')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Current Property Helper",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Append Column Mapping String",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "Current_Property_Helper",
								"value": {
									"value": "@add(variables('Current_Property'),2)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Current Property",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set Current Property Helper",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "Current_Property",
								"value": {
									"value": "@variables('Current_Property_Helper')",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			},
			{
				"name": "Set Number of JSON Properties",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Convert JSON_Properties String to Array",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Number_of_JSON_Properties",
					"value": {
						"value": "@div(length(variables('JSON_Properties')), 2)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set Current_Property",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Convert JSON_Properties String to Array",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Current_Property",
					"value": 0
				}
			},
			{
				"name": "Set Column Mapping String",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set Current_Property",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set Number of JSON Properties",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Column_Mapping_String",
					"value": "{\n  \"type\": \"TabularTranslator\",\n  \"mappings\": ["
				}
			},
			{
				"name": "Clean Up Column Mapping String",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Until",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Column Mapping String Helper",
					"value": {
						"value": "@substring(variables('Column_Mapping_String'), 0, sub(length(variables('Column_Mapping_String')), 1))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Finalize Column Mapping String",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Clean Up Column Mapping String",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Column_Mapping_String",
					"value": {
						"value": "@concat(variables('Column Mapping String Helper'), ']}')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set JSON Properties String",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup JSON",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "JSON_Properties_String",
					"value": {
						"value": "@string(activity('Lookup JSON').output.firstRow)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Clean Up JSON Properties String",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set JSON Properties String",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Helper_String",
					"value": {
						"value": "@replace(replace(replace(replace(replace(replace(replace(replace(variables('JSON_Properties_String'), '/', ''), '\":', '^'), '\"', ''), ' ,', '---'), ',', '^'), '---', ' ,'), '{', ''), '}', '')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Move File to Processed",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Filter Filename",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureFileStorageReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@concat('Import/',pipeline().parameters.DataWarehouseName,'/InProcess/')",
								"type": "Expression"
							},
							"wildcardFileName": {
								"value": "@activity('Filter Filename').output.value[0].name",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureFileStorageWriteSettings",
							"copyBehavior": "PreserveHierarchy"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "FileMover",
						"type": "DatasetReference",
						"parameters": {
							"DataWarehouseName": {
								"value": "@pipeline().parameters.DataWarehouseName",
								"type": "Expression"
							},
							"InOrOut": "InProcess"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "FileMover",
						"type": "DatasetReference",
						"parameters": {
							"DataWarehouseName": {
								"value": "@pipeline().parameters.DataWarehouseName",
								"type": "Expression"
							},
							"InOrOut": "Processed"
						}
					}
				]
			},
			{
				"name": "Get Metadata",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Switch",
						"dependencyConditions": [
							"Succeeded",
							"Skipped"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "FileMover",
						"type": "DatasetReference",
						"parameters": {
							"DataWarehouseName": "Edgewell",
							"InOrOut": "InProcess"
						}
					},
					"fieldList": [
						"itemName",
						"childItems"
					],
					"storeSettings": {
						"type": "AzureFileStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "Filter Filename",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(equals(item().type,'File'),startswith(item().name, pipeline().parameters.FilenamePattern))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Switch",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "Finalize Column Mapping String",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.DataWarehouseName",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "Edgewell",
							"activities": [
								{
									"name": "Copy data from Source to Ingest",
									"type": "Copy",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureFileStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureFileStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"value": "@variables('Column_Mapping_String')",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "SourceFileJSON",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "SourceFileJSON",
											"type": "DatasetReference"
										}
									]
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"DataWarehouseName": {
				"type": "string",
				"defaultValue": "Edgewell"
			},
			"FilenamePattern": {
				"type": "string",
				"defaultValue": "tactical-edgewell"
			}
		},
		"variables": {
			"JSON_Properties": {
				"type": "Array"
			},
			"JSON_Properties_String": {
				"type": "String"
			},
			"Number_of_JSON_Properties": {
				"type": "Integer"
			},
			"Current_Property": {
				"type": "Integer"
			},
			"Column_Mapping_String": {
				"type": "String"
			},
			"Column Mapping String Helper": {
				"type": "String"
			},
			"Current_Property_Helper": {
				"type": "Integer"
			},
			"Helper_String": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Dev Leftovers"
		},
		"annotations": [],
		"lastPublishTime": "2024-01-11T18:02:32Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}